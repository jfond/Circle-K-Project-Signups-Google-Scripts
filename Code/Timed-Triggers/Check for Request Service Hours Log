function checkRequestServiceHours() {
  
  var requestHoursForm = FormApp.openById("1-Cu-mP4CMpA3qWh8fnjw4l-Ro-L17rlvLvL5R3jIZ_A");
  var allFormItems = requestHoursForm.getItems()
 
  //The submission we want is the one that was just submitted (last entry as submitted most recently)
  //Get the index of the highest resopnse that has been handled so far. NOTE: for this variable, we label the indices as 1,2,3,4,5,....
  var formResponsesNumber = SpreadsheetApp.openById("12RLuJRu-uQ0IOGkZYJUC9PrD1Jza2WVVgqKhh94wbOY").getSheets()[0].getRange(3, 1).getValue(); //Yeah its hard coded/magic numbers, blah blah.. GET OVER IT
  Logger.log("Checking Project Signup Responses...");
  var formResponses = requestHoursForm.getResponses(); 
  var NUM_RESPONSES_PER_RUN = 5;
  if ((formResponses.length) > formResponsesNumber){
    var maxIndex = Math.min((formResponses.length), formResponsesNumber+ NUM_RESPONSES_PER_RUN);
    SpreadsheetApp.openById("12RLuJRu-uQ0IOGkZYJUC9PrD1Jza2WVVgqKhh94wbOY").getSheets()[0].getRange(3, 1).setValue(maxIndex);
  }
  //Make the signup Time when the responses were first checked.
  var now = new Date();
  Logger.log("Now: " + now.getHours());
  if ((now.getHours() == 4) && (now.getMinutes() >14) && (now.getMinutes() < 17)){
    requestHoursForm.deleteAllResponses();
    SpreadsheetApp.openById("12RLuJRu-uQ0IOGkZYJUC9PrD1Jza2WVVgqKhh94wbOY").getSheets()[0].getRange(3, 1).setValue(0);
    Logger.log("DELETING PROJECT SIGNUPS RESPONSES...");
  }
  
  var hoursSheet = SpreadsheetApp.openById("1ZMzvNYGKlzKRV05e1_q0GFInE1WT53sHQerSdnAsW8A").getSheets()[0];
  
  var mdr = hoursSheet.getDataRange();
  var hsH = mdr.getHeight();
  var hsW = mdr.getWidth();
  
  hoursSheet.getRange(2,1,hsH,hsW).sort([{column: 5, ascending: true}, {column: 1, ascending: true}]);
  
  for (var n=formResponsesNumber;n<maxIndex; n++){
    var thisResponseItemResponses = formResponses[n].getItemResponses();
    //Again with the magic numbers! The 0 and 1 indices are hard coded in there because there are only two questions in this form,
    //and they are both required so I don't anticipate anyone changing them, and it seems wasteful to do a loop to find the indices.
    var name = thisResponseItemResponses[0].getResponse();
    var email = thisResponseItemResponses[1].getResponse();
    
    //Now open the individual service hour spreadsheet, and make a list for every thing that the person has been involved in.
    
    var DataRange = hoursSheet.getDataRange();
    var numEntries = DataRange.getHeight() - 1;
    var numParameters = DataRange.getWidth();
    
    var emailIndex;
    var nameIndex;
    var projectNameIndex;
    var projectStartDateIndex;
    var hoursIndex;
    
    //First sort through and find where all the information is located
    for (var i=0; i<numParameters;i++){
      if (hoursSheet.getRange(1, i+1).getValue() == "Member Email") {
        emailIndex = i+1;
      }
      else if (hoursSheet.getRange(1, i+1).getValue() == "Member Name"){
        nameIndex = i+1; 
      }
      else if (hoursSheet.getRange(1, i+1).getValue() == "Project Name"){
        projectNameIndex = i+1; 
      }
      else if (hoursSheet.getRange(1, i+1).getValue() == "Project Start Date"){
        projectStartDateIndex = i+1; 
      }
      else if (hoursSheet.getRange(1, i+1).getValue() == "Hours Logged"){
        hoursIndex = i+1; 
      }
    }
    
    //Now sort through every entry and look if the entry matches theur name and email.
    //If it does, add it to the list.
    var projectNameList = [];
    var startDateList = [];
    var hoursList = [];
    
    
    for (var k=0;k<numEntries;k++){
      Logger.log(nameIndex);
      Logger.log(emailIndex);
      if (hoursSheet.getRange(k+2, nameIndex).getValue() == name && hoursSheet.getRange(k+2, emailIndex).getValue() == email){
        var projectName = hoursSheet.getRange(k+2, projectNameIndex).getValue();
        var projectStartDate = hoursSheet.getRange(k+2, projectStartDateIndex).getValue();
        var projectHoursServed = hoursSheet.getRange(k+2, hoursIndex).getValue();
        
        projectNameList.push(projectName);
        startDateList.push(projectStartDate);
        hoursList.push(projectHoursServed);
      }
      
    }
    
    //Now that we have this whole list, we may create a table with all of the information in it.
    var totalHours = 0;
    var TableHTML = "";
    var MessageHTML = "";
    var subject = ""
    
    TableHTML += '<body>'

    TableHTML += '<table border="1" style="width:100%">';
    TableHTML += '<tr>';
    TableHTML += '<td>Project Name</td>';
    TableHTML += '<td>Project Date</td>';		
    TableHTML += '<td>Hours Served</td>';
    TableHTML += '</tr>';
    for (var a=0;a<projectNameList.length;a++){
      TableHTML += '<tr>';      
      TableHTML += '<td>' + projectNameList[a] + '</td>';      
      TableHTML += '<td>' + startDateList[a] + '</td>';
      TableHTML += '<td>' + hoursList[a].toString() + '</td>';
      TableHTML += '</tr>'
      totalHours += hoursList[a];
    }
    TableHTML += '</body>'
    
    if (totalHours == 0){
      MessageHTML += "Dear " + name + ",<p>";
      MessageHTML += "Unfortunately, we do not have any records of you having completed service hours through Circle K. ";
      MessageHTML += "Please make sure that you have entered your name and email addresses correctly, in the same way ";
      MessageHTML += "that you entered them when signing up for service projects. If you still cannot access your records, ";
      MessageHTML += "please check with the Circle K club secretary. <p><p>";
      MessageHTML += "Thank you."; 
      
      subject = "No service record found";
    }
    else {
    
    MessageHTML += "Dear " + name + ",<p>";
    MessageHTML += "Here is a complete record of your service activities as documented by our Circle K club. You have done a total of " + totalHours.toString() + " hours.<p><p>";
    MessageHTML += TableHTML;
    MessageHTML += "<p><p><p>";
    MessageHTML += "We appreciate your commitment towards service, and hope that you continue to serve with Circle K.<p><p>Thank you";
    
    subject = "Service record for " + name;
    }
    
    Logger.log(MessageHTML);
    
    GmailApp.sendEmail(email, subject, "", {htmlBody: MessageHTML});
    
  }
  
  
}
